name: build

on: [push, pull_request]

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache ESP32-S3 GNU Toolchain, Ninja and esp-idf Python environment
        uses: actions/cache@v3
        id: cache
        with:
          key: ${{ runner.OS }}-cache-${{ hashFiles('.github/workflows/build.yml') }}
          path: |
            C:\xtensa-esp32s3-elf
            C:\ninja
            ~\.espressif

      - name: Install ESP32-S3 GNU Toolchain
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl.exe -L https://github.com/espressif/crosstool-NG/releases/download/esp-12.2.0_20230208/xtensa-esp32s3-elf-12.2.0_20230208-x86_64-w64-mingw32.zip -o esp32s3-gnu-toolchain.zip
          tar -xf esp32s3-gnu-toolchain.zip -C C:\

      - name: Install Ninja
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl.exe -L https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip -o ninja-win.zip
          mkdir C:\ninja
          tar -xf ninja-win.zip -C C:\ninja

      - name: Install esp-idf Python environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python third_party/esp-idf/tools/idf_tools.py install-python-env

      - name: Install esp-idf Python requirements
        run: python -m pip install -r third_party/esp-idf/tools/requirements/requirements.core.txt

      - name: Build
        run: |
          # Set environment variables for ESP32-S3 GNU Toolchain and Ninja restored from GitHub cache
          $env:Path = "C:\xtensa-esp32s3-elf\bin;C:\ninja;" + $env:Path
          make

      - name: Set artifacts suffix (if tag)
        if: startsWith(github.ref, 'refs/tags/') == true
        run: Add-Content $env:GITHUB_ENV "git_suffix=$(git describe --tags --abbrev=0)"

      - name: Set artifacts suffix (if branch)
        if: startsWith(github.ref, 'refs/tags/') != true
        run: Add-Content $env:GITHUB_ENV "git_suffix=$(Write-Output "$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)")"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: esp32s3-${{env.git_suffix}}
          path: |
            build/bootloader/bootloader.bin
            build/bootloader/bootloader.elf
            build/bootloader/bootloader.map
            build/partition_table/partition-table.bin
            build/esp32s3
            build/esp32s3.bin
            build/esp32s3.map
          if-no-files-found: error

  linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache ESP32-S3 GNU Toolchain and esp-idf Python environment
        uses: actions/cache@v3
        id: cache
        with:
          key: ${{ runner.OS }}-cache-${{ hashFiles('.github/workflows/build.yml') }}
          path: |
            ~/xtensa-esp32s3-elf
            ~/.espressif

      - name: Install ESP32-S3 GNU Toolchain
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/espressif/crosstool-NG/releases/download/esp-12.2.0_20230208/xtensa-esp32s3-elf-12.2.0_20230208-x86_64-linux-gnu.tar.xz -o esp32s3-gnu-toolchain.tar.xz
          tar -xf esp32s3-gnu-toolchain.tar.xz -C ~/

      - name: Install esp-idf Python environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python third_party/esp-idf/tools/idf_tools.py install-python-env

      - name: Install Ninja and Python esp-idf Python requirements
        run: |
          sudo apt update && sudo apt install ninja-build
          python -m pip install -r third_party/esp-idf/tools/requirements/requirements.core.txt
          python -m pip install -U pyparsing --force

      - name: Build
        run: |
          export PATH=~/xtensa-esp32s3-elf/bin:$PATH
          make
